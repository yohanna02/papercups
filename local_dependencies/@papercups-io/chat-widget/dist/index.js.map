{"version":3,"file":"index.js","sources":["../src/components/WidgetToggle.tsx","../src/utils.ts","../src/theme.ts","../src/storage.ts","../src/logger.ts","../src/components/ChatWidgetContainer.tsx","../src/components/ErrorBoundary.tsx","../src/components/ChatWidget.tsx","../src/index.tsx","../src/components/ChatWindow.tsx"],"sourcesContent":["import React, {CSSProperties} from 'react';\nimport {Button, Image} from 'theme-ui';\nimport {motion} from 'framer-motion';\n\nconst Path = (props: any) => (\n  <motion.path\n    fill='transparent'\n    strokeWidth='3'\n    stroke='hsl(0, 0%, 99%)'\n    strokeLinecap='round'\n    {...props}\n  />\n);\n\nconst DefaultToggleIcon = () => {\n  return (\n    <svg width='27' height='27' viewBox='0 0 27 27'>\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 14.5 L 19 14.5'},\n          open: {opacity: 1, d: 'M 7 7 L 20 20'},\n        }}\n        transition={{duration: 0.2}}\n      />\n\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 8.5 L 19 8.5'},\n          open: {opacity: 1, d: 'M 7 20 L 20 7'},\n        }}\n        transition={{duration: 0.2}}\n      />\n\n      <Path\n        d='M22 21.6453C22 20 23 19.5 23 19.5C23 19.5 25.5 18 25.5 14V9C25.5 4 23 1.5 18 1.5H9C4 1.5 1.5 4 1.5 9V14C1.5 19 4 21 9 21H13.5C14 21 14 21 15 21.5L20.25 24.8572L20.8517 25.2118C21.5184 25.6046 22 25.631 22 24.8572V24.0287V22.7858V21.6453Z'\n        variants={{\n          closed: {opacity: 1},\n          open: {opacity: 0},\n        }}\n        transition={{duration: 0.2}}\n      />\n    </svg>\n  );\n};\n\nexport const ToggleIconFilled = () => {\n  return (\n    <svg width='24' height='25' viewBox='0 0 24 25' fill='none'>\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 14.5 L 19 14.5'},\n          open: {opacity: 1, d: 'M 5 5 L 20 20'},\n        }}\n        transition={{duration: 0.2}}\n      />\n\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 8.5 L 19 8.5'},\n          open: {opacity: 1, d: 'M 5 20 L 20 5'},\n        }}\n        transition={{duration: 0.2}}\n      />\n\n      <motion.path\n        d='M20.5 21.1453C20.5 19.5 21.5 19 21.5 19C21.5 19 24 18.5 24 13.5V8.5C24 3.5 21.5 1 16.5 1H7.5C2.5 1 0 3.5 0 8.5V13.5C0 18.5 2.5 20.5 7.5 20.5H12C12.5 20.5 12.5 20.5 13.5 21L18.75 24.3572L19.3517 24.7118C20.0184 25.1046 20.5 25.131 20.5 24.3572V23.5287V22.2858V21.1453Z'\n        fill='white'\n        fillOpacity='0.7'\n        variants={{\n          closed: {opacity: 1},\n          open: {opacity: 0},\n        }}\n        transition={{duration: 0.2}}\n      />\n      <motion.path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M21.5 18C21.5 18 20.5 18.5 20.5 20.1453V21.2858V22.5287V23.3572C20.5 24.131 20.0184 24.1046 19.3517 23.7118L18.75 23.3572L13.5 20C12.8174 19.6587 12.6007 19.5504 12.3729 19.516C12.267 19.5 12.1587 19.5 12 19.5H7.5C2.5 19.5 0 17.5 0 12.5V7.5C0 2.5 2.5 0 7.5 0H16.5C21.5 0 24 2.5 24 7.5V12.5C24 17.5 21.5 18 21.5 18ZM21 17.557C21.8581 17.557 24 13.557 23 13.057C22.3869 12.7505 21.8801 13.7414 21.4646 14.554C21.2023 15.0668 20.9764 15.5086 20.783 15.5086C20.283 15.5086 20 16.0554 20 16.7568C20 17.4582 20.1419 17.557 21 17.557Z'\n        fill='white'\n        variants={{\n          closed: {opacity: 1},\n          open: {opacity: 0},\n        }}\n        transition={{duration: 0.2}}\n      />\n    </svg>\n  );\n};\n\nconst DefaultCloseIcon = () => {\n  return (\n    <svg width='27' height='27' viewBox='0 0 27 27'>\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 14.5 L 19 14.5'},\n          open: {opacity: 1, d: 'M 7 7 L 20 20'},\n        }}\n        transition={{duration: 0.2}}\n      />\n\n      <Path\n        variants={{\n          closed: {opacity: 0, d: 'M 7.5 8.5 L 19 8.5'},\n          open: {opacity: 1, d: 'M 7 20 L 20 7'},\n        }}\n        transition={{duration: 0.2}}\n      />\n    </svg>\n  );\n};\n\nconst ToggleIcon = ({\n  isOpen,\n  customIconUrl,\n  iconVariant,\n}: {\n  isOpen?: boolean;\n  customIconUrl?: string;\n  iconVariant?: 'outlined' | 'filled';\n}) => {\n  if (!customIconUrl) {\n    return iconVariant === 'filled' ? (\n      <ToggleIconFilled />\n    ) : (\n      <DefaultToggleIcon />\n    );\n  }\n\n  if (isOpen) {\n    return <DefaultCloseIcon />;\n  } else {\n    return <Image src={customIconUrl} style={{maxHeight: 40, maxWidth: 40}} />;\n  }\n};\n\nexport const WidgetToggle = ({\n  isOpen,\n  isDisabled,\n  customIconUrl,\n  iconVariant,\n  style,\n  toggle,\n}: {\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  customIconUrl?: string;\n  iconVariant?: 'outlined' | 'filled';\n  style: CSSProperties;\n  toggle: () => void;\n}) => {\n  return (\n    <Button\n      className='Papercups-toggleButton'\n      variant='primary'\n      p={0}\n      style={style}\n      sx={{\n        variant: 'styles.WidgetToggle',\n      }}\n      disabled={isDisabled}\n      onClick={toggle}\n      aria-label={`${isOpen ? 'Close' : 'Open'} chat widget`}\n    >\n      <ToggleIcon\n        customIconUrl={customIconUrl}\n        iconVariant={iconVariant}\n        isOpen={isOpen}\n      />\n    </Button>\n  );\n};\n\nexport default WidgetToggle;\n","export type WidgetConfig = {\n  token?: string;\n  inbox?: string;\n  // TODO: deprecate\n  accountId?: string;\n  baseUrl?: string;\n  title?: string;\n  subtitle?: string;\n  primaryColor?: string;\n  greeting?: string;\n  awayMessage?: string;\n  newMessagePlaceholder?: string;\n  emailInputPlaceholder?: string;\n  newMessagesNotificationText?: string;\n  companyName?: string;\n  agentAvailableText?: string;\n  agentUnavailableText?: string;\n  showAgentAvailability?: 1 | 0;\n  requireEmailUpfront?: 1 | 0;\n  disableAnalyticsTracking?: 1 | 0;\n  closeable?: 1 | 0;\n  debug?: 1 | 0;\n  customerId?: string;\n  subscriptionPlan?: string;\n  isBrandingHidden?: boolean;\n  isOutsideWorkingHours?: boolean;\n  metadata?: string; // stringified JSON\n  version?: string;\n  ts?: string;\n};\n\nexport function noop() {}\n","import tinycolor from 'tinycolor2';\n\ntype ThemeSettings = {primary?: string};\n\nconst styles: {[key: string]: any} = {\n  ChatWindowContainer: {\n    margin: 0,\n    height: '100%',\n    width: '100%',\n    minHeight: 320,\n  },\n  WidgetContainer: {\n    margin: 0,\n    zIndex: 2147483000,\n    position: 'fixed',\n    bottom: 100,\n    right: 20,\n    width: 376,\n    maxWidth: ['90%', '376px'],\n    minHeight: 250,\n    maxHeight: ['60%', '704px'],\n    boxShadow: 'rgba(0, 0, 0, 0.16) 0px 5px 40px',\n    height: 'calc(100% - 120px)',\n    borderRadius: 8,\n    overflow: 'hidden',\n    notifications: {\n      background: 'transparent',\n      margin: 0,\n      zIndex: 2147483000,\n      position: 'fixed',\n      bottom: 80,\n      right: 20,\n      width: 'auto',\n      maxWidth: ['90%', '300px'],\n      minHeight: 0,\n      maxHeight: ['60%', '400px'],\n      boxShadow: 'none',\n      height: 200,\n      overflow: 'hidden',\n    },\n  },\n  WidgetToggleContainer: {\n    position: 'fixed',\n    zIndex: 2147483003,\n    bottom: '20px',\n    right: '20px',\n  },\n  WidgetToggle: {\n    outline: 'none !important',\n    border: 'none !important',\n    userSelect: 'none !important',\n    cursor: 'pointer',\n    width: '50px',\n    height: '50px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nexport const getThemeConfig = (settings: ThemeSettings) => {\n  const {primary = '#1890ff'} = settings;\n  const base = tinycolor(primary);\n  const overrides = {\n    primary: base.toString(),\n    light: base.lighten().toString(),\n    dark: base.darken().toString(),\n  };\n\n  return {\n    useBodyStyles: false,\n    space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n    fonts: {\n      body:\n        '-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;',\n      heading:\n        '-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;',\n      monospace: '\"Roboto Mono\", monospace',\n    },\n    fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n    fontWeights: {\n      body: 400,\n      heading: 600,\n      bold: 600,\n    },\n    lineHeights: {\n      body: 1.5,\n      heading: 1.125,\n    },\n    colors: {\n      text: '#141414',\n      background: '#fff',\n      primary: overrides.primary,\n      secondary: '#722ed1',\n      muted: '#f0f0f0',\n      gray: 'rgba(0, 0, 0, 0.45)',\n      // TODO: come up with better names!\n      input: 'rgba(0, 0, 0, 0.65)',\n      offset: 'rgba(255, 255, 255, 0.8)',\n    },\n    text: {\n      default: {\n        color: 'text',\n        fontSize: 1,\n      },\n      caps: {\n        textTransform: 'uppercase',\n        letterSpacing: '0.2em',\n      },\n      heading: {\n        fontFamily: 'heading',\n        fontWeight: 'heading',\n        lineHeight: 'heading',\n      },\n    },\n    buttons: {\n      primary: {\n        cursor: 'pointer',\n        outline: 0,\n        boxShadow: 'rgba(0, 0, 0, 0.08) 0 2px 4px',\n        transition: '0.2s',\n        '&:hover': {\n          background: overrides.light,\n          borderColor: overrides.light,\n          boxShadow: 'rgba(0, 0, 0, 0.12) 0px 2px 8px',\n        },\n        '&:active': {\n          background: overrides.dark,\n          borderColor: overrides.dark,\n        },\n      },\n    },\n    styles: {\n      root: {\n        fontFamily: 'body',\n        lineHeight: 'body',\n        fontWeight: 'body',\n        fontSize: 1,\n      },\n      h1: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 5,\n      },\n      h2: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 4,\n      },\n      h3: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 3,\n      },\n      h4: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 2,\n      },\n      h5: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 1,\n      },\n      h6: {\n        color: 'text',\n        fontFamily: 'heading',\n        lineHeight: 'heading',\n        fontWeight: 'heading',\n        fontSize: 0,\n      },\n      p: {\n        color: 'text',\n        fontFamily: 'body',\n        fontWeight: 'body',\n        lineHeight: 'body',\n      },\n      a: {\n        color: 'primary',\n      },\n      pre: {\n        fontFamily: 'monospace',\n        overflowX: 'auto',\n        code: {\n          color: 'inherit',\n        },\n      },\n      code: {\n        fontFamily: 'monospace',\n        fontSize: 'inherit',\n      },\n      table: {\n        width: '100%',\n        borderCollapse: 'separate',\n        borderSpacing: 0,\n      },\n      th: {\n        textAlign: 'left',\n        borderBottomStyle: 'solid',\n      },\n      td: {\n        textAlign: 'left',\n        borderBottomStyle: 'solid',\n      },\n      img: {\n        maxWidth: '100%',\n      },\n      textarea: {\n        transparent: {\n          border: 'none',\n          boxShadow: 'none',\n          resize: 'none',\n          outline: 0,\n          '&:hover': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n          '&:active': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n          '&:focus': {\n            border: 'none',\n            boxShadow: 'none',\n            resize: 'none',\n            outline: 0,\n          },\n        },\n      },\n      ...styles,\n    },\n  };\n};\n\nexport default getThemeConfig;\n","// TODO: do something different for dev vs prod\nconst PREFIX = '__PAPERCUPS__';\n\ntype StorageType = 'local' | 'session' | 'cookie' | 'memory' | 'none' | null;\n\ninterface Storage {\n  get: (key: string) => any;\n  set: (key: string, value: any) => void;\n  remove: (key: string) => any;\n}\n\ntype FallbackStorage = Storage & {\n  _db: Record<string, any>;\n  getItem: (key: string) => any;\n  setItem: (key: string, value: any) => void;\n  removeItem: (key: string) => any;\n};\n\nconst useFallbackStorage = (): FallbackStorage => {\n  return {\n    _db: {},\n    getItem(key: string) {\n      return this._db[key] || null;\n    },\n    setItem(key: string, value: any) {\n      this._db[key] = value;\n    },\n    removeItem(key: string) {\n      delete this._db[key];\n    },\n    // Aliases\n    get(key: string) {\n      return this._db[key] || null;\n    },\n    set(key: string, value: any) {\n      this._db[key] = value;\n    },\n    remove(key: string) {\n      delete this._db[key];\n    },\n  };\n};\n\nconst useLocalStorage = (w: any): Storage => {\n  try {\n    const storage = w && w.localStorage;\n\n    return {\n      ...storage,\n      get: (key: string) => {\n        const result = storage.getItem(`${PREFIX}${key}`);\n\n        if (!result) {\n          return null;\n        }\n\n        try {\n          return JSON.parse(result);\n        } catch (e) {\n          return result;\n        }\n      },\n      set: (key: string, value: any) => {\n        storage.setItem(`${PREFIX}${key}`, JSON.stringify(value));\n      },\n      remove: (key: string) => {\n        storage.removeItem(key);\n      },\n    };\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nconst useSessionStorage = (w: any): Storage => {\n  try {\n    const storage = w && w.sessionStorage;\n\n    // NB: this is the same as `localStorage` above\n    return {\n      ...storage,\n      get: (key: string) => {\n        const result = storage.getItem(`${PREFIX}${key}`);\n\n        if (!result) {\n          return null;\n        }\n\n        try {\n          return JSON.parse(result);\n        } catch (e) {\n          return result;\n        }\n      },\n      set: (key: string, value: any) => {\n        storage.setItem(`${PREFIX}${key}`, JSON.stringify(value));\n      },\n      remove: (key: string) => {\n        storage.removeItem(key);\n      },\n    };\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nconst useCookieStorage = (): Storage => {\n  try {\n    throw new Error('Cookie storage has not been implemented!');\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\n// FIXME: this is just a workaround until we can stop\n// relying on localStorage in our chat iframe\nconst getPreferredStorage = (w: any, type: StorageType = 'local'): Storage => {\n  try {\n    switch (type) {\n      case 'local':\n        return useLocalStorage(w);\n      case 'session':\n        return useSessionStorage(w);\n      case 'cookie':\n        return useCookieStorage();\n      case 'memory':\n      default:\n        return useFallbackStorage();\n    }\n  } catch (e) {\n    return useFallbackStorage();\n  }\n};\n\nexport default function store(\n  w: any,\n  options: {defaultType?: StorageType; openStateType?: StorageType} = {}\n) {\n  const {defaultType = 'local', openStateType = 'session'} = options;\n  // TODO: add support for using cookies as well\n  const defaultStorage = getPreferredStorage(w, defaultType);\n  const openStateStorage = getPreferredStorage(w, openStateType);\n\n  // TODO: improve these names\n  return {\n    getCustomerId: () => defaultStorage.get('__CUSTOMER_ID__'),\n    setCustomerId: (id: string) => defaultStorage.set('__CUSTOMER_ID__', id),\n    removeCustomerId: () => defaultStorage.remove('__CUSTOMER_ID__'),\n    // Open state\n    getOpenState: () => openStateStorage.get(':open'),\n    setOpenState: (state: string | boolean) =>\n      openStateStorage.set(':open', state),\n    clearOpenState: () => openStateStorage.remove(':open'),\n    // Popup seen state\n    getPopupSeen: () => openStateStorage.get(':pop_up_seen'),\n    setPopupSeen: (state: string | boolean) =>\n      openStateStorage.set(':pop_up_seen', state),\n    clearPopupSeen: () => openStateStorage.remove(':pop_up_seen'),\n  };\n}\n","class Logger {\n  debugModeEnabled: boolean;\n\n  constructor(debugModeEnabled?: boolean) {\n    this.debugModeEnabled = !!debugModeEnabled;\n  }\n\n  debug(...args: any) {\n    if (!this.debugModeEnabled) {\n      return;\n    }\n\n    console.debug('[Papercups]', ...args);\n  }\n\n  log(...args: any) {\n    if (!this.debugModeEnabled) {\n      return;\n    }\n\n    console.log('[Papercups]', ...args);\n  }\n\n  info(...args: any) {\n    console.info('[Papercups]', ...args);\n  }\n\n  warn(...args: any) {\n    console.warn('[Papercups]', ...args);\n  }\n\n  error(...args: any) {\n    console.error('[Papercups]', ...args);\n  }\n}\n\nexport default Logger;\n","/** @jsx jsx */\n\nimport React from 'react';\nimport {ThemeProvider, jsx} from 'theme-ui';\nimport qs from 'query-string';\nimport {\n  CustomerMetadata,\n  Message,\n  WidgetSettings,\n  fetchWidgetSettings,\n  updateWidgetSettingsMetadata,\n  isValidUuid,\n  getUserInfo,\n  setupCustomEventHandlers,\n  setupPostMessageHandlers,\n} from '@papercups-io/browser';\n\nimport {WidgetConfig, noop} from '../utils';\nimport getThemeConfig from '../theme';\nimport store from '../storage';\nimport Logger from '../logger';\n\nconst DEFAULT_IFRAME_URL = 'https://chat-widget.papercups.io';\n\nexport type SharedProps = {\n  token: string;\n  inbox?: string;\n  // TODO: deprecate, use `token` instead\n  accountId?: string;\n  title?: string;\n  subtitle?: string;\n  primaryColor?: string;\n  baseUrl?: string;\n  greeting?: string;\n  awayMessage?: string;\n  customer?: CustomerMetadata | null;\n  newMessagePlaceholder?: string;\n  emailInputPlaceholder?: string;\n  newMessagesNotificationText?: string;\n  agentAvailableText?: string;\n  agentUnavailableText?: string;\n  showAgentAvailability?: boolean;\n  iframeUrlOverride?: string;\n  requireEmailUpfront?: boolean;\n  hideOutsideWorkingHours?: boolean;\n  popUpInitialMessage?: boolean | number;\n  customIconUrl?: string;\n  disableAnalyticsTracking?: boolean;\n  debug?: boolean;\n  onChatLoaded?: ({\n    open,\n    close,\n    identify,\n  }: {\n    open: () => void;\n    close: () => void;\n    identify: (data: any) => void;\n  }) => void;\n  onChatOpened?: () => void;\n  onChatClosed?: () => void;\n  onMessageSent?: (message: Message) => void;\n  onMessageReceived?: (message: Message) => void;\n  // TODO: how should we name these?\n  setDefaultTitle?: (settings: WidgetSettings) => string | Promise<string>;\n  setDefaultSubtitle?: (settings: WidgetSettings) => string | Promise<string>;\n  setDefaultGreeting?: (settings: WidgetSettings) => string | Promise<string>;\n};\n\ntype Props = SharedProps & {\n  defaultIsOpen?: boolean;\n  isOpenByDefault?: boolean;\n  persistOpenState?: boolean;\n  canToggle?: boolean;\n  children: (data: any) => any;\n};\n\ntype State = {\n  isOpen: boolean;\n  isLoaded: boolean;\n  query: string;\n  config: WidgetConfig;\n  shouldDisplayNotifications: boolean;\n  isTransitioning: boolean;\n};\n\nclass ChatWidgetContainer extends React.Component<Props, State> {\n  iframeRef: any;\n  storage: any;\n  subscriptions: Array<() => void> = [];\n  logger: Logger = new Logger();\n\n  EVENTS = [\n    'papercups:open',\n    'papercups:close',\n    'papercups:toggle',\n    'papercups:identify',\n    'papercups:customer:set',\n    'storytime:customer:set',\n  ];\n\n  constructor(props: Props) {\n    super(props);\n\n    const token = props.token || props.accountId;\n\n    if (!token) {\n      throw new Error('A `token` is required to run the Papercups chat!');\n    } else if (!isValidUuid(token)) {\n      console.error(\n        `The \\`token\\` must be a valid UUID. (Received invalid \\`token\\`: ${token})`\n      );\n      console.error(\n        `If you're missing a Papercups \\`token\\`, you can get one by signing up for a free account at https://app.papercups.io/register`\n      );\n      throw new Error(`Invalid \\`token\\`: ${token}`);\n    }\n\n    this.state = {\n      isOpen: false,\n      isLoaded: false,\n      query: '',\n      config: {} as WidgetConfig,\n      shouldDisplayNotifications: false,\n      isTransitioning: false,\n    };\n  }\n\n  async componentDidMount() {\n    const ts = +new Date();\n    const {\n      token,\n      inbox,\n      accountId,\n      primaryColor,\n      baseUrl,\n      awayMessage,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      agentAvailableText,\n      agentUnavailableText,\n      showAgentAvailability,\n      requireEmailUpfront,\n      disableAnalyticsTracking,\n      canToggle,\n      customer = {},\n      debug = false,\n    } = this.props;\n\n    this.logger = new Logger(!!debug);\n    this.subscriptions = [\n      setupPostMessageHandlers(window, this.postMessageHandlers),\n      setupCustomEventHandlers(window, this.EVENTS, this.customEventHandlers),\n    ];\n\n    this.storage = store(window);\n    // TODO: use `subscription_plan` from settings.account to determine\n    // whether to display the Papercups branding or not in the chat window\n    const settings = await this.fetchWidgetSettings();\n    const metadata = {...getUserInfo(window), ...customer};\n    const config: WidgetConfig = {\n      baseUrl,\n      inbox,\n      token: token || accountId,\n      // TODO: deprecate\n      accountId: token || accountId,\n      title: await this.getDefaultTitle(settings),\n      subtitle: await this.getDefaultSubtitle(settings),\n      primaryColor: primaryColor || settings.color,\n      greeting: await this.getDefaultGreeting(settings),\n      awayMessage: awayMessage || settings.away_message,\n      newMessagePlaceholder:\n        newMessagePlaceholder || settings.new_message_placeholder,\n      emailInputPlaceholder:\n        emailInputPlaceholder || settings.email_input_placeholder,\n      newMessagesNotificationText:\n        newMessagesNotificationText || settings.new_messages_notification_text,\n      companyName: settings?.account?.company_name,\n      requireEmailUpfront:\n        requireEmailUpfront || settings.require_email_upfront ? 1 : 0,\n      showAgentAvailability:\n        showAgentAvailability || settings.show_agent_availability ? 1 : 0,\n      agentAvailableText: settings.agent_available_text || agentAvailableText,\n      agentUnavailableText:\n        settings.agent_unavailable_text || agentUnavailableText,\n      closeable: canToggle ? 1 : 0,\n      customerId: this.storage.getCustomerId(),\n      subscriptionPlan: settings?.account?.subscription_plan,\n      isOutsideWorkingHours: settings?.account?.is_outside_working_hours,\n      isBrandingHidden: settings?.is_branding_hidden,\n      metadata: JSON.stringify(metadata),\n      disableAnalyticsTracking: disableAnalyticsTracking ? 1 : 0,\n      debug: debug ? 1 : 0,\n      version: '1.3.0',\n      ts: ts.toString(),\n    };\n\n    const query = qs.stringify(config, {skipEmptyString: true, skipNull: true});\n\n    this.setState({config, query});\n\n    // Set some metadata on the widget to better understand usage\n    await this.updateWidgetSettingsMetadata();\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.forEach((unsubscribe) => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Don't do anything if the widget hasn't loaded yet\n    if (!this.state.isLoaded) {\n      return;\n    }\n\n    const {\n      token,\n      inbox,\n      accountId,\n      title,\n      subtitle,\n      primaryColor,\n      baseUrl,\n      greeting,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      requireEmailUpfront,\n      showAgentAvailability,\n      agentAvailableText,\n      agentUnavailableText,\n      customer,\n    } = this.props;\n    const current = [\n      token,\n      inbox,\n      accountId,\n      title,\n      subtitle,\n      primaryColor,\n      baseUrl,\n      greeting,\n      newMessagePlaceholder,\n      emailInputPlaceholder,\n      newMessagesNotificationText,\n      requireEmailUpfront,\n      showAgentAvailability,\n      agentAvailableText,\n      agentUnavailableText,\n    ];\n    const prev = [\n      prevProps.token,\n      prevProps.inbox,\n      prevProps.accountId,\n      prevProps.title,\n      prevProps.subtitle,\n      prevProps.primaryColor,\n      prevProps.baseUrl,\n      prevProps.greeting,\n      prevProps.newMessagePlaceholder,\n      prevProps.emailInputPlaceholder,\n      prevProps.newMessagesNotificationText,\n      prevProps.requireEmailUpfront,\n      prevProps.showAgentAvailability,\n      prevProps.agentAvailableText,\n      prevProps.agentUnavailableText,\n    ];\n    const {customerId} = this.state.config;\n    const shouldUpdateConfig = current.some((value, idx) => {\n      return value !== prev[idx];\n    });\n\n    // Send updates to iframe if props change. (This is mainly for use in\n    // the demo and \"Getting Started\" page, where users can play around with\n    // customizing the chat widget to suit their needs)\n    if (shouldUpdateConfig) {\n      this.handleConfigUpdated({\n        token,\n        inbox,\n        accountId,\n        title,\n        subtitle,\n        primaryColor,\n        baseUrl,\n        greeting,\n        newMessagePlaceholder,\n        emailInputPlaceholder,\n        newMessagesNotificationText,\n        agentAvailableText,\n        agentUnavailableText,\n        requireEmailUpfront: requireEmailUpfront ? 1 : 0,\n        showAgentAvailability: showAgentAvailability ? 1 : 0,\n      });\n    }\n\n    if (this.shouldUpdateCustomer(customer, prevProps.customer)) {\n      this.updateCustomerMetadata(customerId, customer);\n    }\n  }\n\n  shouldUpdateCustomer = (current: any, previous: any) => {\n    if (!current) {\n      return false;\n    } else if (current && !previous) {\n      return true;\n    }\n\n    const {metadata: x = {}, ...a} = current || {};\n    const {metadata: y = {}, ...b} = previous || {};\n\n    const hasMatchingInfo = Object.keys(a).every((key) => a[key] === b[key]);\n    const hasMatchingMetadata = Object.keys(x).every(\n      (key) => x[key] === y[key]\n    );\n\n    return !(hasMatchingInfo && hasMatchingMetadata);\n  };\n\n  getDefaultTitle = async (settings: WidgetSettings) => {\n    const {title, setDefaultTitle} = this.props;\n\n    if (setDefaultTitle && typeof setDefaultTitle === 'function') {\n      return setDefaultTitle(settings);\n    } else {\n      return title || settings.title;\n    }\n  };\n\n  getDefaultSubtitle = async (settings: WidgetSettings) => {\n    const {subtitle, setDefaultSubtitle} = this.props;\n\n    if (setDefaultSubtitle && typeof setDefaultSubtitle === 'function') {\n      return setDefaultSubtitle(settings);\n    } else {\n      return subtitle || settings.subtitle;\n    }\n  };\n\n  getDefaultGreeting = async (settings: WidgetSettings) => {\n    const {greeting, setDefaultGreeting} = this.props;\n\n    if (setDefaultGreeting && typeof setDefaultGreeting === 'function') {\n      return setDefaultGreeting(settings);\n    } else {\n      return greeting || settings.greeting;\n    }\n  };\n\n  setIframeRef = (el: HTMLIFrameElement) => {\n    this.iframeRef = el;\n  };\n\n  getIframeUrl = () => {\n    return this.props.iframeUrlOverride || DEFAULT_IFRAME_URL;\n  };\n\n  handleConfigUpdated = (updates: WidgetConfig) => {\n    this.setState({\n      config: {\n        ...this.state.config,\n        ...updates,\n      },\n    });\n\n    this.send('config:update', updates);\n  };\n\n  handleSetCustomerId = (id?: any) => {\n    const cachedCustomerId = this.storage.getCustomerId();\n    const customerId = id || cachedCustomerId;\n\n    this.logger.debug('Setting customer ID:', customerId);\n    this.setState({\n      config: {...this.state.config, customerId},\n    });\n    this.send('customer:set:id', customerId);\n  };\n\n  handleCustomerIdUpdated = (id?: any) => {\n    const cachedCustomerId = this.storage.getCustomerId();\n    const customerId = id || cachedCustomerId;\n    const config = {...this.state.config, customerId};\n\n    // TODO: this is a slight hack to force a refresh of the chat window\n    this.setState({\n      config,\n      query: qs.stringify(config, {skipEmptyString: true, skipNull: true}),\n    });\n\n    this.logger.debug('Updated customer ID:', customerId);\n  };\n\n  fetchWidgetSettings = async (): Promise<WidgetSettings> => {\n    const {token, inbox, accountId, baseUrl} = this.props;\n    const params = {account_id: accountId || token, inbox_id: inbox};\n    const empty = {} as WidgetSettings;\n\n    return fetchWidgetSettings(params, baseUrl)\n      .then((settings) => settings || empty)\n      .catch(() => empty);\n  };\n\n  updateWidgetSettingsMetadata = async () => {\n    const {token, inbox, accountId, baseUrl} = this.props;\n    const params = {\n      account_id: accountId || token,\n      inbox_id: inbox,\n      metadata: getUserInfo(window),\n    };\n\n    return updateWidgetSettingsMetadata(params, baseUrl).catch((err) => {\n      // No need to block on this\n      this.logger.error('Failed to update widget metadata:', err);\n    });\n  };\n\n  hasValidPayloadIdentity = (payload: any) => {\n    const ts = payload && payload.ts;\n    const {config = {} as WidgetConfig} = this.state;\n\n    if (!ts) {\n      // If the payload doesn't contain an identifier, let it pass through\n      return true;\n    }\n\n    if (config.ts === ts) {\n      // Pass through, since the payload identifier matches the component ts\n      return true;\n    }\n\n    return false;\n  };\n\n  customEventHandlers = (event: any) => {\n    if (!event || !event.type) {\n      return null;\n    }\n\n    const {type, detail} = event;\n\n    switch (type) {\n      case 'papercups:open':\n        return this.handleOpenWidget();\n      case 'papercups:close':\n        return this.handleCloseWidget();\n      case 'papercups:toggle':\n        return this.handleToggleOpen();\n      case 'papercups:customer:set':\n        return this.handleSetCustomerId(detail);\n      case 'storytime:customer:set':\n        return this.handleCustomerIdUpdated(detail); // TODO: test this!\n      default:\n        return null;\n    }\n  };\n\n  postMessageHandlers = (msg: any) => {\n    this.logger.debug('Handling in parent:', msg.data);\n    const iframeUrl = this.getIframeUrl();\n    const {origin} = new URL(iframeUrl);\n\n    if (msg.origin !== origin) {\n      return null;\n    }\n\n    const {event, payload = {}} = msg.data;\n\n    if (!this.hasValidPayloadIdentity(payload)) {\n      this.logger.warn(\n        'Payload identifer from iframe does not match parent — halting message handlers.'\n      );\n\n      return null;\n    }\n\n    switch (event) {\n      case 'chat:loaded':\n        return this.handleChatLoaded();\n      case 'customer:created':\n      case 'customer:updated':\n        return this.handleCacheCustomerId(payload);\n      case 'conversation:join':\n        return this.sendCustomerUpdate(payload);\n      case 'message:received':\n        return this.handleMessageReceived(payload);\n      case 'message:sent':\n        return this.handleMessageSent(payload);\n      case 'messages:unseen':\n        return this.handleUnseenMessages(payload);\n      case 'messages:seen':\n        return this.handleMessagesSeen();\n      case 'papercups:open':\n      case 'papercups:close':\n        return this.handleToggleOpen();\n      default:\n        return null;\n    }\n  };\n\n  send = (event: string, payload?: any) => {\n    this.logger.debug('Sending from parent:', {event, payload});\n    const el = this.iframeRef as any;\n\n    if (!el) {\n      throw new Error(\n        `Attempted to send event ${event} with payload ${JSON.stringify(\n          payload\n        )} before iframeRef was ready`\n      );\n    }\n\n    el.contentWindow.postMessage({event, payload}, this.getIframeUrl());\n  };\n\n  handleMessageReceived = (message: Message) => {\n    const {onMessageReceived = noop} = this.props;\n    const {user_id: userId, customer_id: customerId} = message;\n    const isFromAgent = !!userId && !customerId;\n\n    // Only invoke callback if message is from agent, because we currently track\n    // `message:received` events to know if a message went through successfully\n    if (isFromAgent) {\n      onMessageReceived && onMessageReceived(message);\n    }\n  };\n\n  handleMessageSent = (message: Message) => {\n    const {onMessageSent = noop} = this.props;\n\n    onMessageSent && onMessageSent(message);\n  };\n\n  handleUnseenMessages = (payload: any) => {\n    this.logger.debug('Handling unseen messages:', payload);\n\n    this.setState({shouldDisplayNotifications: true});\n    this.send('notifications:display', {shouldDisplayNotifications: true});\n  };\n\n  handleMessagesSeen = () => {\n    this.logger.debug('Handling messages seen');\n\n    this.setState({shouldDisplayNotifications: false});\n    this.storage.setPopupSeen(true);\n    this.send('notifications:display', {shouldDisplayNotifications: false});\n  };\n\n  shouldOpenByDefault = (): boolean => {\n    const {\n      defaultIsOpen,\n      isOpenByDefault,\n      persistOpenState,\n      canToggle,\n    } = this.props;\n\n    if (!canToggle) {\n      return true;\n    }\n\n    const isOpenFromCache = this.storage.getOpenState();\n\n    if (persistOpenState) {\n      return isOpenFromCache;\n    }\n\n    return !!(isOpenByDefault || defaultIsOpen);\n  };\n\n  handleChatLoaded = () => {\n    this.setState({isLoaded: true});\n\n    const {config = {} as WidgetConfig} = this.state;\n    const {subscriptionPlan = null} = config;\n    const {popUpInitialMessage, onChatLoaded = noop} = this.props;\n\n    if (onChatLoaded && typeof onChatLoaded === 'function') {\n      onChatLoaded({\n        open: this.handleOpenWidget,\n        close: this.handleCloseWidget,\n        identify: this.identify,\n      });\n    }\n\n    if (this.shouldOpenByDefault()) {\n      this.setState({isOpen: true}, () => this.emitToggleEvent(true));\n    }\n\n    if (popUpInitialMessage && !this.storage.getPopupSeen()) {\n      const t =\n        typeof popUpInitialMessage === 'number' ? popUpInitialMessage : 0;\n\n      setTimeout(() => {\n        this.setState({shouldDisplayNotifications: true});\n        this.send('notifications:display', {\n          shouldDisplayNotifications: true,\n          // TODO: this may not be necessary\n          popUpInitialMessage: true,\n        });\n      }, t);\n    }\n\n    this.send('papercups:plan', {plan: subscriptionPlan});\n  };\n\n  formatCustomerMetadata = (customer: CustomerMetadata | null | undefined) => {\n    if (!customer) {\n      return {};\n    }\n\n    return Object.keys(customer).reduce((acc, key) => {\n      if (key === 'metadata') {\n        return {...acc, [key]: customer[key]};\n      } else {\n        // Make sure all other passed-in values are strings\n        return {...acc, [key]: String(customer[key])};\n      }\n    }, {});\n  };\n\n  identify = (data: CustomerMetadata) => {\n    const {customerId} = this.state.config;\n\n    return this.updateCustomerMetadata(customerId, data);\n  };\n\n  updateCustomerMetadata = (\n    customerId: string | undefined,\n    data: CustomerMetadata | null | undefined\n  ) => {\n    const customerBrowserInfo = getUserInfo(window);\n    const metadata = {\n      ...customerBrowserInfo,\n      ...this.formatCustomerMetadata(data),\n    };\n\n    return this.send('customer:update', {customerId, metadata});\n  };\n\n  sendCustomerUpdate = (payload: any) => {\n    const {customerId} = payload;\n    const {customer} = this.props;\n\n    this.updateCustomerMetadata(customerId, customer);\n  };\n\n  handleCacheCustomerId = (payload: any) => {\n    const {customerId} = payload;\n\n    // Let other modules know that the customer has been set\n    this.logger.debug('Caching customer ID:', customerId);\n    window.dispatchEvent(\n      new CustomEvent('papercups:customer:set', {\n        detail: customerId,\n      })\n    );\n\n    this.storage.setCustomerId(customerId);\n    this.setState({\n      config: {...this.state.config, customerId},\n    });\n  };\n\n  emitToggleEvent = (isOpen: boolean) => {\n    this.send('papercups:toggle', {isOpen});\n\n    const {\n      persistOpenState = false,\n      onChatOpened = noop,\n      onChatClosed = noop,\n    } = this.props;\n\n    if (persistOpenState) {\n      this.storage.setOpenState(isOpen);\n    }\n\n    if (isOpen) {\n      onChatOpened && onChatOpened();\n    } else {\n      onChatClosed && onChatClosed();\n    }\n  };\n\n  handleOpenWidget = () => {\n    if (!this.props.canToggle || this.state.isOpen) {\n      return;\n    }\n\n    if (this.state.shouldDisplayNotifications) {\n      this.setState({isTransitioning: true}, () => {\n        setTimeout(() => {\n          this.setState({isOpen: true, isTransitioning: false}, () =>\n            this.emitToggleEvent(true)\n          );\n        }, 200);\n      });\n    } else {\n      this.setState({isOpen: true}, () => this.emitToggleEvent(true));\n    }\n  };\n\n  handleCloseWidget = () => {\n    if (!this.props.canToggle || !this.state.isOpen) {\n      return;\n    }\n\n    this.setState({isOpen: false}, () => this.emitToggleEvent(false));\n  };\n\n  handleToggleOpen = () => {\n    const {isOpen: wasOpen, isLoaded, shouldDisplayNotifications} = this.state;\n    const isOpen = !wasOpen;\n\n    // Prevent opening the widget until everything has loaded\n    if (!isLoaded || !this.props.canToggle) {\n      return;\n    }\n\n    if (!wasOpen && shouldDisplayNotifications) {\n      this.setState({isTransitioning: true}, () => {\n        setTimeout(() => {\n          this.setState({isOpen, isTransitioning: false}, () =>\n            this.emitToggleEvent(isOpen)\n          );\n        }, 200);\n      });\n    } else {\n      this.setState({isOpen}, () => this.emitToggleEvent(isOpen));\n    }\n  };\n\n  render() {\n    const {\n      isOpen,\n      isLoaded,\n      query,\n      config,\n      shouldDisplayNotifications,\n      isTransitioning,\n    } = this.state;\n    const {\n      customIconUrl,\n      hideOutsideWorkingHours = false,\n      children,\n    } = this.props;\n    const {primaryColor} = config;\n\n    if (!query) {\n      return null;\n    }\n\n    if (hideOutsideWorkingHours && config.isOutsideWorkingHours) {\n      return null;\n    }\n\n    const iframeUrl = this.getIframeUrl();\n    const isActive = (isOpen || shouldDisplayNotifications) && !isTransitioning;\n    const theme = getThemeConfig({primary: primaryColor});\n    const sandbox = [\n      // Allow scripts to load in iframe\n      'allow-scripts',\n      // Allow opening links from iframe\n      'allow-popups',\n      // Needed to access localStorage\n      'allow-same-origin',\n      // Allow form for message input\n      'allow-forms',\n    ].join(' ');\n\n    return (\n      <ThemeProvider theme={theme}>\n        {children({\n          sandbox,\n          isLoaded,\n          isActive,\n          isOpen,\n          isTransitioning,\n          customIconUrl,\n          iframeUrl,\n          query,\n          shouldDisplayNotifications,\n          setIframeRef: this.setIframeRef,\n          onToggleOpen: this.handleToggleOpen,\n        })}\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default ChatWidgetContainer;\n","import React from 'react';\n\ntype State = {error: any};\ntype Props = {};\n\nclass ErrorBoundary extends React.Component<Props, State> {\n  state = {error: null};\n\n  static getDerivedStateFromError(error: any) {\n    // Update state so the next render will show the fallback UI.\n    return {error};\n  }\n\n  componentDidCatch(error: any, info: any) {\n    // TODO: log to Sentry?\n    console.error('Error rendering Papercups chat:', error, info);\n  }\n\n  render() {\n    if (this.state.error) {\n      // TODO: should we render something different here?\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","/** @jsx jsx */\n\nimport React, {CSSProperties} from 'react';\nimport {motion} from 'framer-motion';\nimport {jsx} from 'theme-ui';\n\nimport WidgetToggle from './WidgetToggle';\nimport ChatWidgetContainer, {SharedProps} from './ChatWidgetContainer';\nimport ErrorBoundary from './ErrorBoundary';\n\ntype ToggleButtonOptions = {\n  isOpen: boolean;\n  isDisabled: boolean;\n  onToggleOpen: () => void;\n};\n\ntype StyleOverrides = {\n  chatContainer?: CSSProperties;\n  toggleContainer?: CSSProperties;\n  toggleButton?: CSSProperties;\n};\n\ntype PositionConfig = {\n  side: 'left' | 'right';\n  offset: number;\n};\n\nconst DEFAULT_X_OFFSET = 20;\n\nconst normalizePositionConfig = (\n  position?: 'left' | 'right' | PositionConfig\n): PositionConfig => {\n  if (!position) {\n    return {side: 'right', offset: DEFAULT_X_OFFSET};\n  }\n\n  switch (position) {\n    case 'left':\n      return {side: 'left', offset: DEFAULT_X_OFFSET};\n    case 'right':\n      return {side: 'right', offset: DEFAULT_X_OFFSET};\n    default:\n      return position;\n  }\n};\n\nconst getDefaultStyles = (\n  styles: StyleOverrides = {},\n  position: PositionConfig\n): StyleOverrides => {\n  const {\n    chatContainer: chatContainerStyle = {},\n    toggleContainer: toggleContainerStyle = {},\n    toggleButton: toggleButtonStyle = {},\n  } = styles;\n  const {side = 'right', offset = DEFAULT_X_OFFSET} = position;\n\n  switch (side) {\n    case 'left':\n      return {\n        chatContainer: {left: offset, right: 'auto', ...chatContainerStyle},\n        toggleContainer: {left: offset, right: 'auto', ...toggleContainerStyle},\n        toggleButton: toggleButtonStyle,\n      };\n    case 'right':\n    default:\n      return {\n        chatContainer: {right: offset, left: 'auto', ...chatContainerStyle},\n        toggleContainer: {right: offset, left: 'auto', ...toggleContainerStyle},\n        toggleButton: toggleButtonStyle,\n      };\n  }\n};\n\ntype Props = SharedProps & {\n  defaultIsOpen?: boolean;\n  isOpenByDefault?: boolean;\n  persistOpenState?: boolean;\n  hideToggleButton?: boolean;\n  iconVariant?: 'outlined' | 'filled';\n  position?: 'left' | 'right' | PositionConfig;\n  renderToggleButton?: (options: ToggleButtonOptions) => React.ReactElement;\n  styles?: StyleOverrides;\n};\n\nconst ChatWidget = (props: Props) => {\n  return (\n    <ErrorBoundary>\n      <ChatWidgetContainer {...props} canToggle>\n        {(config) => {\n          const {\n            sandbox,\n            isLoaded,\n            isActive,\n            isOpen,\n            isTransitioning,\n            customIconUrl,\n            iframeUrl,\n            query,\n            shouldDisplayNotifications,\n            setIframeRef,\n            onToggleOpen,\n          } = config;\n\n          const {\n            hideToggleButton,\n            iconVariant,\n            renderToggleButton,\n            position = 'right',\n            styles = {},\n          } = props;\n          const positionConfig = normalizePositionConfig(position);\n          const {\n            chatContainer: chatContainerStyle = {},\n            toggleContainer: toggleContainerStyle = {},\n            toggleButton: toggleButtonStyle = {},\n          } = getDefaultStyles(styles, positionConfig);\n\n          return (\n            <React.Fragment>\n              <motion.iframe\n                ref={setIframeRef}\n                title='Papercups Chat Widget Container'\n                className='Papercups-chatWindowContainer'\n                sandbox={sandbox}\n                animate={isActive ? 'open' : 'closed'}\n                initial='closed'\n                variants={{\n                  closed: {opacity: 0, y: 4},\n                  open: {opacity: 1, y: 0},\n                }}\n                transition={{duration: 0.2, ease: 'easeIn'}}\n                src={`${iframeUrl}?${query}`}\n                style={\n                  isActive\n                    ? chatContainerStyle\n                    : {\n                        pointerEvents: 'none',\n                        height: 0,\n                        minHeight: 0,\n                      }\n                }\n                sx={{\n                  border: 'none',\n                  bg: 'background',\n                  variant:\n                    !isOpen && shouldDisplayNotifications\n                      ? 'styles.WidgetContainer.notifications'\n                      : 'styles.WidgetContainer',\n                }}\n              >\n                Loading...\n              </motion.iframe>\n\n              {isLoaded && !hideToggleButton && (\n                <motion.div\n                  className='Papercups-toggleButtonContainer'\n                  initial={false}\n                  style={toggleContainerStyle}\n                  animate={isOpen ? 'open' : 'closed'}\n                  sx={{\n                    variant: 'styles.WidgetToggleContainer',\n                  }}\n                >\n                  {renderToggleButton &&\n                  typeof renderToggleButton === 'function' ? (\n                    renderToggleButton({\n                      isOpen,\n                      onToggleOpen,\n                      isDisabled: isTransitioning,\n                    })\n                  ) : (\n                    <WidgetToggle\n                      style={toggleButtonStyle}\n                      isDisabled={isTransitioning}\n                      isOpen={isOpen}\n                      customIconUrl={customIconUrl}\n                      iconVariant={iconVariant}\n                      toggle={onToggleOpen}\n                    />\n                  )}\n                </motion.div>\n              )}\n            </React.Fragment>\n          );\n        }}\n      </ChatWidgetContainer>\n    </ErrorBoundary>\n  );\n};\n\nexport default ChatWidget;\n","import ChatWidget from './components/ChatWidget';\nimport ChatWindow from './components/ChatWindow';\n\nexport const open = () => window.dispatchEvent(new Event('papercups:open'));\nexport const close = () => window.dispatchEvent(new Event('papercups:close'));\nexport const toggle = () => window.dispatchEvent(new Event('papercups:toggle'));\n\nexport const identify = () => {\n  // TODO: add ability to create/update customer information\n  console.warn('`Papercups.identify` has not been implemented yet!');\n};\n\nexport const Papercups = {\n  open,\n  close,\n  toggle,\n};\n\nexport {ChatWidget, ChatWindow};\n\nexport default ChatWidget;\n","/** @jsx jsx */\n\nimport {jsx} from 'theme-ui';\nimport {motion} from 'framer-motion';\n\nimport ChatWidgetContainer, {SharedProps} from './ChatWidgetContainer';\nimport ErrorBoundary from './ErrorBoundary';\n\ntype Props = SharedProps & {};\n\nconst ChatWindow = (props: Props) => {\n  // TODO: add a prop to `ChatWidgetContainer` to indicate when component is not\n  // the widget (e.g. it is never toggled open/closed, no need to show notifications)\n  return (\n    <ErrorBoundary>\n      <ChatWidgetContainer {...props} canToggle={false}>\n        {(config) => {\n          const {sandbox, isLoaded, iframeUrl, query, setIframeRef} = config;\n\n          return (\n            <motion.iframe\n              ref={setIframeRef}\n              className='Papercups-chatWindowContainer'\n              sandbox={sandbox}\n              animate={isLoaded ? 'open' : 'closed'}\n              initial='closed'\n              variants={{\n                closed: {opacity: 0},\n                open: {opacity: 1},\n              }}\n              transition={{duration: 0.2, ease: 'easeIn'}}\n              src={`${iframeUrl}?${query}`}\n              sx={{\n                opacity: isLoaded ? 1 : 0,\n                border: 'none',\n                bg: 'background',\n                variant: 'styles.ChatWindowContainer',\n              }}\n            >\n              Loading...\n            </motion.iframe>\n          );\n        }}\n      </ChatWidgetContainer>\n    </ErrorBoundary>\n  );\n};\n\nexport default ChatWindow;\n"],"names":["Path","props","React","motion","path","fill","strokeWidth","stroke","strokeLinecap","DefaultToggleIcon","width","height","viewBox","variants","closed","opacity","d","open","transition","duration","ToggleIconFilled","fillOpacity","fillRule","clipRule","DefaultCloseIcon","ToggleIcon","customIconUrl","iconVariant","isOpen","Image","src","style","maxHeight","maxWidth","WidgetToggle","Button","className","variant","p","sx","disabled","isDisabled","onClick","toggle","noop","styles","ChatWindowContainer","margin","minHeight","WidgetContainer","zIndex","position","bottom","right","boxShadow","borderRadius","overflow","notifications","background","WidgetToggleContainer","outline","border","userSelect","cursor","display","justifyContent","alignItems","PREFIX","getPreferredStorage","w","type","storage","localStorage","get","key","result","getItem","JSON","parse","e","set","value","setItem","stringify","remove","removeItem","_db","this","useLocalStorage","sessionStorage","useSessionStorage","Error","useCookieStorage","Logger","debugModeEnabled","debug","args","console","log","info","warn","error","ChatWidgetContainer","_this","current","previous","metadata","x","a","y","b","hasMatchingInfo","Object","keys","every","hasMatchingMetadata","settings","title","setDefaultTitle","subtitle","setDefaultSubtitle","greeting","setDefaultGreeting","el","iframeRef","iframeUrlOverride","updates","setState","config","state","send","id","cachedCustomerId","getCustomerId","customerId","logger","query","qs","skipEmptyString","skipNull","empty","fetchWidgetSettings","account_id","accountId","token","inbox_id","inbox","baseUrl","then","params","getUserInfo","window","updateWidgetSettingsMetadata","err","payload","ts","event","detail","handleOpenWidget","handleCloseWidget","handleToggleOpen","handleSetCustomerId","handleCustomerIdUpdated","msg","data","iframeUrl","getIframeUrl","URL","origin","hasValidPayloadIdentity","handleChatLoaded","handleCacheCustomerId","sendCustomerUpdate","handleMessageReceived","handleMessageSent","handleUnseenMessages","handleMessagesSeen","contentWindow","postMessage","message","onMessageReceived","user_id","customer_id","onMessageSent","shouldDisplayNotifications","setPopupSeen","defaultIsOpen","isOpenByDefault","persistOpenState","canToggle","isOpenFromCache","getOpenState","isLoaded","subscriptionPlan","popUpInitialMessage","onChatLoaded","close","identify","shouldOpenByDefault","emitToggleEvent","getPopupSeen","setTimeout","plan","customer","reduce","acc","String","updateCustomerMetadata","formatCustomerMetadata","dispatchEvent","CustomEvent","setCustomerId","onChatOpened","onChatClosed","setOpenState","isTransitioning","wasOpen","isValidUuid","componentDidMount","Date","_this3","primaryColor","awayMessage","newMessagePlaceholder","emailInputPlaceholder","newMessagesNotificationText","agentAvailableText","agentUnavailableText","showAgentAvailability","requireEmailUpfront","disableAnalyticsTracking","subscriptions","setupPostMessageHandlers","postMessageHandlers","setupCustomEventHandlers","EVENTS","customEventHandlers","options","defaultType","openStateType","defaultStorage","openStateStorage","removeCustomerId","clearOpenState","clearPopupSeen","store","getDefaultTitle","getDefaultSubtitle","color","getDefaultGreeting","away_message","new_message_placeholder","email_input_placeholder","new_messages_notification_text","companyName","account","_settings$account","company_name","require_email_upfront","show_agent_availability","agent_available_text","agent_unavailable_text","closeable","_settings$account2","subscription_plan","isOutsideWorkingHours","_settings$account3","is_outside_working_hours","isBrandingHidden","is_branding_hidden","version","toString","componentWillUnmount","forEach","unsubscribe","componentDidUpdate","prevProps","prev","some","idx","handleConfigUpdated","shouldUpdateCustomer","render","hideOutsideWorkingHours","children","base","overrides","isActive","theme","useBodyStyles","space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","colors","text","primary","tinycolor","light","lighten","dark","darken","secondary","muted","gray","input","offset","default","fontSize","caps","textTransform","letterSpacing","fontFamily","fontWeight","lineHeight","buttons","&:hover","borderColor","&:active","root","h1","h2","h3","h4","h5","h6","pre","overflowX","code","table","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","img","textarea","transparent","resize","&:focus","sandbox","join","jsx","ThemeProvider","setIframeRef","onToggleOpen","Component","ErrorBoundary","getDerivedStateFromError","componentDidCatch","ChatWidget","hideToggleButton","renderToggleButton","chatContainer","chatContainerStyle","toggleContainer","toggleContainerStyle","toggleButton","toggleButtonStyle","side","left","getDefaultStyles","normalizePositionConfig","Fragment","iframe","ref","animate","initial","ease","pointerEvents","bg","div","Event","Papercups"],"mappings":"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"}